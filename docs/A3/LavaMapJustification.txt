WarpPipe is a class that extends from HighGround. As HighGround already implements an Actor jumping onto it, we do not
need to implement it in WarpPipe apart from setting the successRate and damage values (DRY Principle)
WarpPipe has an association to itself. This is as a WarpPipe needs to know which other WarpPipe to warp to.
WarpPipe also has an association to Location. A Ground class does not have an association to Location but this is needed in
WarpPipe to know where to warp the actor.

When an actor is standing on the WarpPipe a WarpAction is created.
WarpAction extends from Action and handles warping an actor from a WarpPipe to another.
This means WarpPipe needs an association with WarpPipe, storing the source pipe and the connecting pipe.
The actual warping can be done with the moveActor method in GameMap, effectively using the engine code.

The Lava Map is created and added to World in Application. The Lava Map contains a new ground type Lava which extends
from Ground. Ground already has a dependency on Location in the Tick method so no new dependencies are needed.
Every tick, the Lava will check Location if there is an Actor and damage them.


