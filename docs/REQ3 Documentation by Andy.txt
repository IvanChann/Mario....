Added NPC abstract class to extend Actor, since all NPCs have some sort of system to keep
track of behaviours (HashMap), friendly and hostile included. Allows for extension.
The HashMap of behaviours will be kept in this class with a getter. Also follows DRY

Added Enemy abstract class extending NPC, reason being that ALL enemies cannot enter floor,
and it is likely that in the future there will be some other feature exclusive to enemies implemented, follows DRY.
Enemy's constructor's body adds new capability CANNOT_ENTER_FLOOR
All future enemy classes added can extend this class

Added Goomba and Koopa class extending Enemy to diagram

Added AttackBehaviour that implements Behaviour, will scan the actor's surroundings
if it finds an actor with HOSTILE_TO_ENEMY it will return an AttackAction

Modify Floor such that canActorEnter returns False for any actors with CANNOT_ENTER_FLOOR capability
Therefore added a noteworthy dependency between Floor and Status

Both Goomba and Koopa's attack damage can be handled by overriding getIntrinsicWeapon

Overriding the PlayTurn method can handle the 10% chance of removing Goomba from the map
Additionally, the PlayTurn method can be used to check the enemy's surroundings, if the enemy
spots an actor with HOSTILE_TO_ENEMY, a FollowBehaviour will be added to their behaviours

Dormant state will be kept as a Boolean attribute within the Koopa class, and Koopa will behave
differently depending on whether it is dormant or not. 

isConscious method will be overriden for Koopa to always return true, but if its health points
is not greater than 0, then the dormant attribute will be set to true, and its display character
will be changed to D

Wrench's shell destroying capability can be implemented by using addCapability in the body
of its constructor. Thus, there is a noteworthy dependency between Wrench and Status

Added DestroyShellAction that extends Action. 
Basically, this action will just remove the target from the map but prints a custom message.
DestroyShellAction has association with Actor since it needs to keep track of the target of
the action.
The 0..8 multiplicity is because theoretically, there can be 8 shells around the player that can be
destroyed.




